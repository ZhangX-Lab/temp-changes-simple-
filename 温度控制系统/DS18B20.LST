C51 COMPILER V9.01   DS18B20                                                               12/09/2019 10:20:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE DS18B20.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"temp.h"
   2          
   3          void Delay1ms(u16 y)
   4          {
   5   1        u16 x;
   6   1        for( ; y>0; y--)
   7   1        {
   8   2          for(x=110; x>0; x--);
   9   2        }
  10   1      }
  11          
  12          
  13          u8 Ds18b20Init()
  14          {
  15   1        u8 i;
  16   1        DSPORT = 0;      //将总线拉低480us~960us
  17   1        i = 70; 
  18   1        while(i--);//延时642us
  19   1        DSPORT = 1;     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  20   1        i = 0;
  21   1        while(DSPORT) //等待DS18B20拉低总线
  22   1        {
  23   2          Delay1ms(1);
  24   2          i++;
  25   2          if(i>5)//等待>5MS
  26   2          {
  27   3            return 0;//初始化失败
  28   3          }
  29   2        
  30   2        }
  31   1        return 1;//初始化成功
  32   1      }
  33          
  34          void Ds18b20WriteByte(u8 dat)
  35          {
  36   1        u16 i, j;
  37   1      
  38   1        for(j=0; j<8; j++)
  39   1        {
  40   2          DSPORT = 0;         //每写入一位数据之前先把总线拉低1us
  41   2          i++;
  42   2          DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  43   2          i=6;
  44   2          while(i--); //延时68us，持续时间最少60us
  45   2          DSPORT = 1; //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  46   2          dat >>= 1;
  47   2        }
  48   1      }
  49          
  50          u8 Ds18b20ReadByte()
  51          {
  52   1        u8 byte, bi;
  53   1        u16 i, j; 
  54   1        for(j=8; j>0; j--)
  55   1        {
C51 COMPILER V9.01   DS18B20                                                               12/09/2019 10:20:01 PAGE 2   

  56   2          DSPORT = 0;//先将总线拉低1us
  57   2          i++;
  58   2          DSPORT = 1;//然后释放总线
  59   2          i++;
  60   2          i++;//延时6us等待数据稳定
  61   2          bi = DSPORT;   //读取数据，从最低位开始读取
  62   2          /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  63   2          byte = (byte >> 1) | (bi << 7);             
  64   2          i = 4;    //读取完之后等待48us再接着读取下一个数
  65   2          while(i--);
  66   2        }       
  67   1        return byte;
  68   1      }
  69          
  70          
  71          void  Ds18b20ChangTemp()
  72          {
  73   1        Ds18b20Init();
  74   1        Delay1ms(1);
  75   1        Ds18b20WriteByte(0xcc);   //跳过ROM操作命令    
  76   1        Ds18b20WriteByte(0x44);     //温度转换命令
  77   1        //Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
  78   1         
  79   1      }
  80          
  81          void  Ds18b20ReadTempCom()
  82          { 
  83   1      
  84   1        Ds18b20Init();
  85   1        Delay1ms(1);
  86   1        Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
  87   1        Ds18b20WriteByte(0xbe);  //发送读取温度命令
  88   1      }
  89          
  90          int Ds18b20ReadTemp()
  91          {
  92   1        int temp = 0;
  93   1        u8 tmh, tml;
  94   1        Ds18b20ChangTemp();       //先写入转换命令
  95   1        Ds18b20ReadTempCom();     //然后等待转换完后发送读取温度命令
  96   1        tml = Ds18b20ReadByte();    //读取温度值共16位，先读低字节
  97   1        tmh = Ds18b20ReadByte();    //再读高字节
  98   1        temp = tmh;
  99   1        temp <<= 8;
 100   1        temp |= tml;
 101   1        return temp;
 102   1      }
 103          
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
